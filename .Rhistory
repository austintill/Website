library(lmtest)
library(lmtest)
library(sandwich)
install.packages("plotROC")
library(plotROC)
library(ggplot2)
library(plotROC)
library(pROC)
install.packages("pROC")
install.packages("pROC")
library(pROC)
install.packages("glmnet")
library(glmnet)
install.packages("readr")
library(readr)
library(glmnet)
library(pROC)
library(dplyr)
library(dpylr)
library(dplyr)
library(cluster)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readr)
NBA <- read_csv("NBA.csv", col_types = cols(`Conference Standing` = col_number(),
Losses = col_number(), `Team PA/G` = col_number(),
`Team PS/G` = col_number(), Wins = col_number()))
glimpse(NBA)
library(readr)
MVPs <- read_csv("NBA_MVPs.csv",
col_types = cols(Age = col_number(),
`FG%` = col_number(), MP = col_number(),
PPG = col_number()))
glimpse(MVPs)
#Joining
library(dplyr)
library(tidyverse)
Combined <- MVPs %>% full_join(NBA, by="Season")
Combined
#Wrangling
Combined %>% filter(Team=="LAL" & MVP=="Kareem Abdul-Jabbar") %>%
arrange(desc(PPG)) %>% select(Team, MVP, PPG, Wins)
With_Total_Games <- Combined %>% mutate("Total_Team_Games"=Wins+Losses)
With_Win_Pct <- With_Total_Games %>% mutate("Win_Pct"=Wins/Total_Team_Games)
With_Win_Pct %>% filter(Team=="BOS") %>% summarize(mean(Win_Pct), mean(PPG))
renames <- With_Win_Pct %>% rename("Team_PSG"=`Team PS/G`,
"Team_PAG"=`Team PA/G`, "Conference_Standing"=`Conference Standing`, "FG_Pct"=`FG%`)
renames %>% group_by(Team) %>% summarize(mean(MP), mean(PPG))
renames %>% group_by(MVP) %>% summarize(sd(Wins)) %>% na.omit()
renames %>% filter(Team=="LAL") %>% summarize(mean(Wins), mean(Conference_Standing))
renames %>% filter(MVP=="Michael Jordan") %>% summarize(mean_PPG=mean(PPG), mean_Age=mean(Age))
renames %>% summarize(mean_age=mean(Age), mean_MP=mean(MP), mean_PPG=mean(PPG), mean_FG=mean(FG_Pct))
renames %>% summarize(sd_age=sd(Age), sd_MP=sd(MP), sd_PPG=sd(PPG), sd_FG=sd(FG_Pct))
not_tidy <-renames %>% summarize(mean_wins=mean(Wins), mean_losses=mean(Losses),
mean_TeamPSG=mean(Team_PSG), mean_TeamPAG=mean(Team_PAG),
mean_CS=mean(Conference_Standing), sd_wins=sd(Wins), sd_losses=sd(Losses),
sd_TeamPSG=sd(Team_PSG), sd_TeamPAG=sd(Team_PAG),
sd_CS=sd(Conference_Standing))
#Tidy: Rearranging Wide/Long
not_tidy %>% pivot_longer(contains("_"), names_to="temp", values_to="value")%>%
separate(temp,c("stat","variable")) %>%
pivot_wider(names_from = "stat", values_from = "value")
renames %>% summarize(sd_wins=sd(Wins), sd_losses=sd(Losses),
sd_TeamPSG=sd(Team_PSG), sd_TeamPAG=sd(Team_PAG),
sd_CS=sd(Conference_Standing))
renames %>% group_by(MVP,Team) %>% summarize(median_PPG=median(PPG), median_TeamPSG=median(Team_PSG))
Correlation <- renames %>% select(-MVP, -Team, -Total_Team_Games, -Season, - Champions)
summary(Correlation)
cor(Correlation)
#Visualizing
library(ggplot2)
ggplot(data = renames, aes(x= Win_Pct, y = PPG, color = Conference_Standing)) +
geom_point(size=3, alpha = .8) + ggtitle("NBA Team Wins and Conference Standing with MVP Points Per Game") + xlab("Win Percentage")  +
ylab("MVP Points Per Game")
ggplot(renames, aes(x=Age, y=Win_Pct, fill=Champions)) + geom_bar(stat="summary",
fun.y="mean", position = "dodge", width = .7, color = "black") +
theme(axis.text.x = element_text(angle=45, hjust=1), legend.position="right") +
scale_fill_hue() + scale_y_continuous(breaks = seq(0,0.8, 0.1)) +
ggtitle("NBA MVPs Age and Win Percentage with Championship Status") +
xlab("Age") + ylab("Win Percentage")
renames%>%select_if(is.numeric)%>%cor%>%as.data.frame%>%
rownames_to_column%>%pivot_longer(-1)%>%
ggplot(aes(rowname,name,fill=value))+geom_tile()+
geom_text(aes(label=round(value,2)))+
scale_fill_gradient(low = "red", high = "blue")+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
xlab("")+ylab("") + ggtitle("Correlation Heat Map of Numeric Variables")
#Dimentionality Reduction
library(cluster)
renames
renames %>% select_if(is.numeric)%>%scale%>%cor%>%round(2)
NBA_pca <- renames%>%select(Age, MP, PPG)%>%scale%>%princomp
NBA_pca
summary(NBA_pca, loadings = T)
eigvals<-NBA_pca$sdev^2
varprop<-eigvals/sum(eigvals)
ggplot()+geom_bar(aes(y=varprop,x=1:3),stat="identity")+xlab("")+geom_path(aes(y=varprop,x=1:3))+
geom_text(aes(x=1:3,y=varprop,label=round(varprop,2)),vjust=1,col="white",size=5)+
scale_y_continuous(breaks=seq(0,.6,.2),labels = scales::percent)+
scale_x_continuous(breaks=1:3)
pca1<- renames%>%mutate(PC1=NBA_pca$scores[,1], PC2=NBA_pca$scores[,2])
ggplot(pca1, aes(PC1, PC2, color=Age)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(carData)
library(dplyr)
library(tidyverse)
Wong <- read.csv("Wong.csv")
head(Wong)
#MANOVA
man1 <- manova(cbind(days,duration,age,piq,viq)~sex, data=Wong)
summary(man1)
#Randomization Test
Wong%>%group_by(sex)%>%
summarize(means=mean(piq))%>%summarize(`mean_diff:`=diff(means))
rand_dist<-vector()
for(i in 1:5000){
new<-data.frame(piq=sample(Wong$piq),sex=Wong$sex)
rand_dist[i]<-mean(new[new$sex=="Male",]$piq)-
mean(new[new$sex=="Female",]$piq)
}
{hist(rand_dist,main="",ylab=""); abline(v = 2.07156,col="red")}
mean(rand_dist>2.07156 | rand_dist< -2.07156)
t.test(data=Wong,piq~sex)
#Linear Regression
library(sandwich)
library(lmtest)
#Coefficient Estimates
Wong$age_c <- Wong$age - mean(Wong$age)
Wong$days_c <- Wong$days - mean(Wong$days)
Wong$duration_c <- Wong$duration - mean(Wong$duration)
fit <- lm(viq ~ sex*duration_c, data=Wong)
summary(fit)
#Regression Plot
ggplot(Wong, aes(x=duration_c, y=viq,group=sex))+geom_point(aes(color=sex))+
geom_smooth(method="lm",formula=y~1,se=F,fullrange=T,aes(color=sex))
resids<-fit$residuals
fitvals<-fit$fitted.values
#Checking Assumptions
ggplot()+geom_point(aes(fitvals,resids))+geom_hline(yintercept=0, col="red")
bptest(fit)
ggplot()+geom_histogram(aes(resids),bins=20)
ggplot()+geom_qq(aes(sample=resids))+geom_qq_line(aes(sample=resids), color='red')
ks.test(resids, "pnorm", sd=sd(resids))
#Normal-theory SEs
summary(fit)$coef[,1:2]
# Robust SEs
coeftest(fit,vcov=vcovHC(fit))[,1:2]
# R^2 Variability
sum((fitvals-mean(Wong$viq))^2)/sum((Wong$viq-mean(Wong$viq))^2)
#Bootstrapped SEs
samp_distn<-replicate(5000, {
boot_dat <- sample_frac(Wong, replace=T)
fit <- lm(viq ~ sex*duration_c, data=boot_dat)
coef(fit)
})
samp_distn %>% t %>% as.data.frame %>% summarize_all(sd)
#Logistic Regression
#Interpreting Coefficients
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
#Logistic Regression
#Interpreting Coefficients
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
knitr::opts_chunk$set(echo = TRUE)
library(carData)
library(dplyr)
library(tidyverse)
Wong <- read.csv("Wong.csv")
head(Wong)
#MANOVA
man1 <- manova(cbind(days,duration,age,piq,viq)~sex, data=Wong)
summary(man1)
#Randomization Test
Wong%>%group_by(sex)%>%
summarize(means=mean(piq))%>%summarize(`mean_diff:`=diff(means))
rand_dist<-vector()
for(i in 1:5000){
new<-data.frame(piq=sample(Wong$piq),sex=Wong$sex)
rand_dist[i]<-mean(new[new$sex=="Male",]$piq)-
mean(new[new$sex=="Female",]$piq)
}
{hist(rand_dist,main="",ylab=""); abline(v = 2.07156,col="red")}
mean(rand_dist>2.07156 | rand_dist< -2.07156)
t.test(data=Wong,piq~sex)
#Linear Regression
library(sandwich)
library(lmtest)
#Coefficient Estimates
Wong$age_c <- Wong$age - mean(Wong$age)
Wong$days_c <- Wong$days - mean(Wong$days)
Wong$duration_c <- Wong$duration - mean(Wong$duration)
fit <- lm(viq ~ sex*duration_c, data=Wong)
summary(fit)
#Regression Plot
ggplot(Wong, aes(x=duration_c, y=viq,group=sex))+geom_point(aes(color=sex))+
geom_smooth(method="lm",formula=y~1,se=F,fullrange=T,aes(color=sex))
resids<-fit$residuals
fitvals<-fit$fitted.values
#Checking Assumptions
ggplot()+geom_point(aes(fitvals,resids))+geom_hline(yintercept=0, col="red")
bptest(fit)
ggplot()+geom_histogram(aes(resids),bins=20)
ggplot()+geom_qq(aes(sample=resids))+geom_qq_line(aes(sample=resids), color='red')
ks.test(resids, "pnorm", sd=sd(resids))
#Normal-theory SEs
summary(fit)$coef[,1:2]
# Robust SEs
coeftest(fit,vcov=vcovHC(fit))[,1:2]
# R^2 Variability
sum((fitvals-mean(Wong$viq))^2)/sum((Wong$viq-mean(Wong$viq))^2)
#Bootstrapped SEs
samp_distn<-replicate(5000, {
boot_dat <- sample_frac(Wong, replace=T)
fit <- lm(viq ~ sex*duration_c, data=boot_dat)
coef(fit)
})
samp_distn %>% t %>% as.data.frame %>% summarize_all(sd)
#Logistic Regression
#Interpreting Coefficients
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
knitr::opts_chunk$set(echo = TRUE)
library(carData)
library(dplyr)
library(tidyverse)
Wong <- read.csv("Wong.csv")
head(Wong)
#MANOVA
man1 <- manova(cbind(days,duration,age,piq,viq)~sex, data=Wong)
summary(man1)
#Randomization Test
Wong%>%group_by(sex)%>%
summarize(means=mean(piq))%>%summarize(`mean_diff:`=diff(means))
rand_dist<-vector()
for(i in 1:5000){
new<-data.frame(piq=sample(Wong$piq),sex=Wong$sex)
rand_dist[i]<-mean(new[new$sex=="Male",]$piq)-
mean(new[new$sex=="Female",]$piq)
}
{hist(rand_dist,main="",ylab=""); abline(v = 2.07156,col="red")}
mean(rand_dist>2.07156 | rand_dist< -2.07156)
t.test(data=Wong,piq~sex)
#Linear Regression
library(sandwich)
library(lmtest)
#Coefficient Estimates
Wong$age_c <- Wong$age - mean(Wong$age)
Wong$days_c <- Wong$days - mean(Wong$days)
Wong$duration_c <- Wong$duration - mean(Wong$duration)
fit <- lm(viq ~ sex*duration_c, data=Wong)
summary(fit)
#Regression Plot
ggplot(Wong, aes(x=duration_c, y=viq,group=sex))+geom_point(aes(color=sex))+
geom_smooth(method="lm",formula=y~1,se=F,fullrange=T,aes(color=sex))
resids<-fit$residuals
fitvals<-fit$fitted.values
#Checking Assumptions
ggplot()+geom_point(aes(fitvals,resids))+geom_hline(yintercept=0, col="red")
bptest(fit)
ggplot()+geom_histogram(aes(resids),bins=20)
ggplot()+geom_qq(aes(sample=resids))+geom_qq_line(aes(sample=resids), color='red')
ks.test(resids, "pnorm", sd=sd(resids))
#Normal-theory SEs
summary(fit)$coef[,1:2]
# Robust SEs
coeftest(fit,vcov=vcovHC(fit))[,1:2]
# R^2 Variability
sum((fitvals-mean(Wong$viq))^2)/sum((Wong$viq-mean(Wong$viq))^2)
#Bootstrapped SEs
samp_distn<-replicate(5000, {
boot_dat <- sample_frac(Wong, replace=T)
fit <- lm(viq ~ sex*duration_c, data=boot_dat)
coef(fit)
})
samp_distn %>% t %>% as.data.frame %>% summarize_all(sd)
#Logistic Regression
#Interpreting Coefficients
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
#Interpreting Coefficients
sex <- as.factor(sex)
#Interpreting Coefficients
sex <- as.factor(Wong$sex)
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
#Logistic Regression
#Interpreting Coefficients
sex <- as.factor(Wong$sex)
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
#Interpreting Coefficients
sex <- Wong%>%as.factor(sex)
#Interpreting Coefficients
sex <- as.factor(sex)
#Interpreting Coefficients
sex <- as.factor(sex)
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
#Interpreting Coefficients
sex <- as.factor(sex)
#Logistic Regression
#Interpreting Coefficients
sex <- as.factor(sex)
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
#Interpreting Coefficients
Wong$sex <- as.factor(Wong$sex)
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
#Logistic Regression
#Interpreting Coefficients
Wong$sex <- as.factor(Wong$sex)
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
coeftest(fit1)
exp(coef(fit1))
#Confusion Matrix
probs<-predict(fit1,type="response")
table(predict=as.numeric(probs>.5),truth=Wong$sex)%>%addmargins
260/331 #Accuracy
260/260 #Sensitivity (TPR)
0 #Specificity (TNR)
260/331 #Precision (PPV)
#Density Plot
Wong$logit<-predict(fit1)
Wong$outcome<-factor(Wong$sex,levels=c("Male","Female"))
ggplot(Wong,aes(logit, fill=sex))+geom_density(alpha=.3)+
geom_vline(xintercept=0,lty=2)
#ROC Plot and AUC
library(plotROC)
library(pROC)
ROCplot<-ggplot(Wong)+geom_roc(aes(d=sex,m=probs), n.cuts=0)+
geom_segment(aes(x=0,xend=1,y=0,yend=1),lty=2)
ROCplot
calc_auc(ROCplot)
view(Wong)
# GIVE IT PREDICTED PROBS AND TRUTH LABELS, RETURNS VARIOUS DIAGNOSTICS
class_diag<-function(probs,truth){
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
prediction<-ifelse(probs>.5,1,0)
acc=mean(truth==prediction)
sens=mean(prediction[truth==1]==1)
spec=mean(prediction[truth==0]==0)
ppv=mean(truth[prediction==1]==1)
#CALCULATE EXACT AUC
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)
}
Wong$outcome<-NULL
class_diag(probs,Wong$sex)
#10-fold CV
set.seed(1234)
k=10
data<-Wong[sample(nrow(Wong)),] #randomly order rows
folds<-cut(seq(1:nrow(Wong)),breaks=k,labels=F) #create folds
diags<-NULL
for(i in 1:k){
## Create training and test sets
train<-data[folds!=i,]
test<-data[folds==i,]
truth<-test$sex
## Train model on training set
fit<-glm(sex~piq+viq+duration,data=train,family="binomial")
probs<-predict(fit,newdata = test,type="response")
## Test model on test set (save all k results)
diags<-rbind(diags,class_diag(probs,truth))
}
summarize_all(diags,mean)
knitr::opts_chunk$set(echo = TRUE)
library(carData)
library(dplyr)
library(tidyverse)
Wong <- read.csv("Wong.csv")
head(Wong)
#MANOVA
man1 <- manova(cbind(days,duration,age,piq,viq)~sex, data=Wong)
summary(man1)
#Randomization Test
Wong%>%group_by(sex)%>%
summarize(means=mean(piq))%>%summarize(`mean_diff:`=diff(means))
rand_dist<-vector()
for(i in 1:5000){
new<-data.frame(piq=sample(Wong$piq),sex=Wong$sex)
rand_dist[i]<-mean(new[new$sex=="Male",]$piq)-
mean(new[new$sex=="Female",]$piq)
}
{hist(rand_dist,main="",ylab=""); abline(v = 2.07156,col="red")}
mean(rand_dist>2.07156 | rand_dist< -2.07156)
t.test(data=Wong,piq~sex)
#Linear Regression
library(sandwich)
library(lmtest)
#Coefficient Estimates
Wong$age_c <- Wong$age - mean(Wong$age)
Wong$days_c <- Wong$days - mean(Wong$days)
Wong$duration_c <- Wong$duration - mean(Wong$duration)
fit <- lm(viq ~ sex*duration_c, data=Wong)
summary(fit)
#Regression Plot
ggplot(Wong, aes(x=duration_c, y=viq,group=sex))+geom_point(aes(color=sex))+
geom_smooth(method="lm",formula=y~1,se=F,fullrange=T,aes(color=sex))
resids<-fit$residuals
fitvals<-fit$fitted.values
#Checking Assumptions
ggplot()+geom_point(aes(fitvals,resids))+geom_hline(yintercept=0, col="red")
bptest(fit)
ggplot()+geom_histogram(aes(resids),bins=20)
ggplot()+geom_qq(aes(sample=resids))+geom_qq_line(aes(sample=resids), color='red')
ks.test(resids, "pnorm", sd=sd(resids))
#Normal-theory SEs
summary(fit)$coef[,1:2]
# Robust SEs
coeftest(fit,vcov=vcovHC(fit))[,1:2]
# R^2 Variability
sum((fitvals-mean(Wong$viq))^2)/sum((Wong$viq-mean(Wong$viq))^2)
#Bootstrapped SEs
samp_distn<-replicate(5000, {
boot_dat <- sample_frac(Wong, replace=T)
fit <- lm(viq ~ sex*duration_c, data=boot_dat)
coef(fit)
})
samp_distn %>% t %>% as.data.frame %>% summarize_all(sd)
#Logistic Regression
#Interpreting Coefficients
Wong$sex <- as.factor(Wong$sex)
fit1 <- glm(sex~piq+viq+duration,data = Wong,family = binomial(link = "logit"))
coeftest(fit1)
exp(coef(fit1))
#Confusion Matrix
probs<-predict(fit1,type="response")
table(predict=as.numeric(probs>.5),truth=Wong$sex)%>%addmargins
260/331 #Accuracy
260/260 #Sensitivity (TPR)
0 #Specificity (TNR)
260/331 #Precision (PPV)
#Density Plot
Wong$logit<-predict(fit1)
Wong$outcome<-factor(Wong$sex,levels=c("Male","Female"))
ggplot(Wong,aes(logit, fill=sex))+geom_density(alpha=.3)+
geom_vline(xintercept=0,lty=2)
#ROC Plot and AUC
library(plotROC)
library(pROC)
ROCplot<-ggplot(Wong)+geom_roc(aes(d=sex,m=probs), n.cuts=0)+
geom_segment(aes(x=0,xend=1,y=0,yend=1),lty=2)
ROCplot
calc_auc(ROCplot)
view(Wong)
# GIVE IT PREDICTED PROBS AND TRUTH LABELS, RETURNS VARIOUS DIAGNOSTICS
class_diag<-function(probs,truth){
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
prediction<-ifelse(probs>.5,1,0)
acc=mean(truth==prediction)
sens=mean(prediction[truth==1]==1)
spec=mean(prediction[truth==0]==0)
ppv=mean(truth[prediction==1]==1)
#CALCULATE EXACT AUC
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)
}
Wong$outcome<-NULL
class_diag(probs,Wong$sex)
#10-fold CV
set.seed(1234)
k=10
data<-Wong[sample(nrow(Wong)),] #randomly order rows
folds<-cut(seq(1:nrow(Wong)),breaks=k,labels=F) #create folds
diags<-NULL
for(i in 1:k){
## Create training and test sets
train<-data[folds!=i,]
test<-data[folds==i,]
truth<-test$sex
## Train model on training set
fit<-glm(sex~piq+viq+duration,data=train,family="binomial")
probs<-predict(fit,newdata = test,type="response")
## Test model on test set (save all k results)
diags<-rbind(diags,class_diag(probs,truth))
}
summarize_all(diags,mean)
#LASSO Regression
library(glmnet)
y <- as.matrix(Wong$sex)
x <- model.matrix(sex~.,data = Wong)[,-1]
cv <- cv.glmnet(x,y,family="binomial")
lasso <- glmnet(x,y,family = "binomial",lambda=cv$lambda.1se)
coef(lasso)
Wong <- read.csv("Wong.csv")
#run to install the blogdown package; wait until finished
install.packages("blogdown")
install.packages("blogdown")
#run to install hugo; wait until finished
blogdown::install_hugo()
install.packages("blogdown")
install.packages("blogdown")
blogdown::new_site(theme="nurlansu/hugo-sustain")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
#run to install hugo; wait until finished
blogdown::install_hugo()
library(blogdown)
